<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7/BfjcGDK1xl4NsAAAAASUVORK5CYII=
</value>
  </data>
</root>